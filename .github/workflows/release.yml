name: Release

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Create a Release
        id: create-release
        # actions/create-release has been archived
        #  https://github.com/actions/create-release
        # This workflow using elgohr/Github-Release-Action
        #  https://github.com/elgohr/Github-Release-Action
        uses: elgohr/Github-Release-Action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:`github.GITHUB_REF` when a user pushes a new tag
          tag_name: ${{ github.ref }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          prerelease: false

      - name: Upload a Release Asset
        # actions/upload-release-asset has been archived
        #  https://github.com/actions/upload-release-asset
        # This workflow using softprops/action-gh-release
        #  https://github.com/softprops/action-gh-release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./build/libs/${{ github.event.repository.name }}-${{ env.RELEASE_VERSION }}.jar
          asset_name: ${{ github.event.repository.name }}-${{ env.RELEASE_VERSION }}.jar
          asset_content_type: application/java-archive
